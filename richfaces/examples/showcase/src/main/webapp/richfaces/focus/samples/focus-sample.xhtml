<!DOCTYPE html>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:a4j="http://richfaces.org/a4j"
    xmlns:rich="http://richfaces.org/rich">

    <rich:panel header="Focus and Form Input Validation">

        <h:form>

            <rich:focus />

            <h:panelGrid columns="3" id="grid">
                <h:outputText value="Name:" />
                <h:inputText label="Name" id="name" value="#{userBean.name}">
                    <f:validateRequired />
                    <f:validateLength minimum="3" />
                </h:inputText>
                <rich:message for="name" ajaxRendered="true" />
                <h:outputText value="Job:" />
                <h:inputText label="Job" id="job" value="#{userBean.job}">
                    <f:validateRequired />
                    <f:validateLength minimum="3" maximum="50" />
                </h:inputText>
                <rich:message for="job" ajaxRendered="true" />
                <h:outputText value="Address:" />
                <h:inputText label="Address" id="address" value="#{userBean.address}">
                    <f:validateRequired />
                    <f:validateLength minimum="10" />
                </h:inputText>
                <rich:message for="address" ajaxRendered="true" />
                <h:outputText value="Zip:" />
                <h:inputText label="Zip" id="zip" value="#{userBean.zip}">
                    <f:validateRequired />
                    <f:validateLength minimum="4" maximum="9" />
                </h:inputText>
                <rich:message for="zip" ajaxRendered="true" />
            </h:panelGrid>
            
            <a4j:commandButton value="Ajax Validate" oncomplete="highlightInvalidInputs()"/>
        </h:form>

    </rich:panel>
    <h:outputScript>
        highlightInvalidInputs = function() {
            var rows = $(#{rich:element('grid')}).find('tr');
            rows.find('input').removeClass('invalid');
            rows.has('.rf-msg-err').find('input').addClass('invalid')
        }
    </h:outputScript>
    <style>
        .invalid {
            border-color: #D91C0D !important;
        }
    </style>

</ui:composition>